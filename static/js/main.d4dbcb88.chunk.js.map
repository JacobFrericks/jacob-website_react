{"version":3,"sources":["img/portfolio/aca_eagles.png","img/profile_pic.png","components/BrandBanner.tsx","components/Hexagon.tsx","components/AboutMe.tsx","components/Portfolio.tsx","objects/blogObj.tsx","components/BlogCard.tsx","components/Blog.tsx","components/ContactMe.tsx","components/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavbarScroller","className","Hexagon","props","icon","title","text","AboutMe","src","me","alt","Portfolio","id","aca_eagles_banner","BlogObj","obj","coverImage","date","description","this","cover_image","convertDate","published_timestamp","newDate","Date","getMonth","String","getDate","padStart","getFullYear","BlogCard","blogPost","style","width","objectFit","superagent","require","getPosts","a","get","query","username","then","res","body","console","log","Blog","useState","posts","setPosts","loading","setLoading","useEffect","result","slice","map","post","classNamekey","key","href","ContactMe","placeholder","type","name","value","Footer","faLinkedinIn","faFacebookF","faGithub","faTwitter","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d4dbcb88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aca_eagles.b8dca292.png\";","module.exports = __webpack_public_path__ + \"static/media/profile_pic.0068e261.png\";","import React from 'react';\nimport './BrandBanner.scss'\n\nconst NavbarScroller = () => {\n\n    return (\n        <div className=\"home\">\n            <div className=\"text\">\n                Hello, I'm <span>Jacob Frericks</span>.\n                <br/>\n                I'm a full stack web developer.\n                <br/>\n                <br/>\n                <button>View my work</button>\n            </div>\n\n        </div>\n    );\n};\n\nexport default NavbarScroller;","import React from 'react';\nimport './Hexagon.scss';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\n\n\nconst Hexagon = (props) => {\n    return (\n        <div>\n            <div className=\"hexContainer\">\n                <div className=\"hexagon\">\n                    <FontAwesomeIcon icon={props.icon}/>\n                </div>\n            </div>\n            <div className='textContainer'>\n                <div className='label'>{props.title}</div>\n                {props.text}\n            </div>\n        </div>\n    );\n};\n\nexport default Hexagon;","import React from 'react';\nimport Hexagon from './Hexagon';\nimport './AboutMe.scss';\nimport me from '../img/profile_pic.png';\n\nlet fastText = \"Fast load times and lag free interaction. My highest priority.\";\nlet intuitiveText = \"Strong preference for easy to use intuitive UX/UI.\";\nlet responsiveText = \"My layouts will work on any device, big or small.\";\nlet dynamicText = \"Websites don't have to be static. I love making pages come to life.\";\n\nconst AboutMe = () => {\n    return (\n        <div className='aboutme'>\n            <div className='title'>About</div>\n            <div className=\"aboutGrid\">\n                <div className=\"gridItem\">\n                    <Hexagon\n                        title=\"Fast\"\n                        text={fastText}\n                        icon=\"coffee\"\n                    />\n                </div>\n                <div className=\"gridItem\">\n                    <Hexagon\n                        title=\"Intuitive\"\n                        text={intuitiveText}\n                        icon=\"coffee\"\n                    />\n                </div>\n                <div className=\"gridItem\">\n                    <Hexagon\n                        title=\"Responsive\"\n                        text={responsiveText}\n                        icon=\"coffee\"\n                    />\n                </div>\n                <div className=\"gridItem\">\n                    <Hexagon\n                        title=\"Dynamic\"\n                        text={dynamicText}\n                        icon=\"coffee\"\n                    />\n                </div>\n            </div>\n            <div className='profilePicWrapper'>\n                <img src={me} className=\"me\" alt=\"My profile\"/>\n            </div>\n            <div className='profile'>\n                <div className='profileTitle'> Who's this guy?</div>\n                <div className='profileBody'>\n                    I'm a Front-End Developer for ChowNow in Los Angeles, CA.<br/>\n                    I have serious passion for UI effects, animations and creating intuitive, dynamic user experiences.  Let's make something special.\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AboutMe;","import React from 'react';\nimport './Portfolio.scss';\n\nimport aca_eagles_banner from \"../img/portfolio/aca_eagles.png\";\n\n\nconst Portfolio = () => {\n    return (\n        <section className=\"projects\" id=\"portfolio\">\n            <div className='title'>Projects</div>\n            <div className='projectGrid'>\n                <img className='project' src={aca_eagles_banner} alt='ACA Eagles'/>\n                <img className='project' src={aca_eagles_banner} alt='ACA Eagles'/>\n                <img className='project' src={aca_eagles_banner} alt='ACA Eagles'/>\n                <img className='project' src={aca_eagles_banner} alt='ACA Eagles'/>\n            </div>\n        </section>\n    );\n        \n};\n\nexport default Portfolio;","export class BlogObj {\n    id: any;\n    coverImage: string;\n    title: string;\n    date: string;\n    description: string;\n\n    constructor(obj: any) {\n        this.id = obj.id;\n        this.coverImage = obj.cover_image;\n        this.title = obj.title;\n        this.date = this.convertDate(obj.published_timestamp);\n        this.description = obj.description;\n    }\n\n    convertDate(date: string) {\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n        let newDate = new Date(date);\n        let month = monthNames[newDate.getMonth()];\n        let day = String(newDate.getDate()).padStart(2, '0');\n        let year = newDate.getFullYear();\n\n        return month + \" \" + day + \", \" + year;\n    }\n}","import React from 'react';\nimport './BlogCard.scss';\n\n\n\nconst BlogCard = props => {\n    let blogPost = props.blogPost;\n    return (\n        <div>\n            <img\n                src={blogPost.coverImage}\n                alt={\"Blog post cover\"}\n                style={{ width: \"100%\", objectFit: \"contain\" }}\n            />\n            <div className='blogTitle'>{blogPost.title}</div>\n            <div className='blogDate'>{blogPost.date}</div>\n            <div className='blogDescription'>{blogPost.description}</div>\n        </div>\n    );\n};\n\nexport default BlogCard;","import React, {useEffect, useState} from 'react';\nimport './Blog.scss';\nimport { BlogObj } from '../objects/blogObj';\nimport BlogCard from \"./BlogCard\";\n\nconst superagent = require('superagent');\n\nconst Blog = () => {\n\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        getPosts().then(result => {\n            setPosts(result);\n            setLoading(false)\n        })\n    }, []);\n\n    return (\n        <div>\n            <div className='title'>Blog</div>\n            {loading\n                ? <h1>loading posts...</h1>\n                : <div className='blogGrid'>\n                    {posts.slice(0, 4).map(post => {\n                        let blogPost = new BlogObj(post);\n                        return (\n                            <BlogCard\n                                classNamekey={blogPost.id}\n                                blogPost={blogPost}\n                                key={blogPost.id}\n                            />\n                        )\n                    })}\n                </div>\n            }\n            <div className='submitButton'>\n                <a className='moreBlogsButton' href=\"https://dev.to/jacobfrericks/\">MORE</a>\n            </div>\n        </div>\n    )\n};\n\nconst getPosts = async () => {\n    const DEV_TO_URL = \"https://dev.to/api/articles\";\n\n    try {\n        return superagent\n            .get(DEV_TO_URL)\n            .query({username: \"jacobfrericks\"})\n            .then(res => {\n                return res.body\n            });\n    } catch (error) {\n        console.log(\"Exception thrown when getting blog posts\", error)\n    }\n};\n\nexport default Blog;","import React from 'react';\n// import styles from \"./ContactMe.module.css\";\n// import LinkedIn from '@material-ui/icons/LinkedIn';\n// import GitHub from '@material-ui/icons/GitHub';\n// import Facebook from '@material-ui/icons/Facebook';\n// import Twitter from '@material-ui/icons/Twitter';\n// import IconButton from '@material-ui/core/IconButton';\n// import makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport './ContactMe.scss';\n\n// let hover = { backgroundColor: \"#fff\", color: \"#18bc9c\", border: \"solid 2px #fff\" };\n// let iconSize = { fontSize: '100px' };\n\n// const useStyles = makeStyles(theme => ({\n//     linkedin: {\n//         \"&:hover, &.Mui-focusVisible\": hover,\n//         color: \"#4875B4\",\n//     },\n//     github: {\n//         \"&:hover, &.Mui-focusVisible\": hover,\n//         color: \"#000\"\n//     },\n//     facebook: {\n//         \"&:hover, &.Mui-focusVisible\": hover,\n//         color: \"#3B5998\"\n//     },\n//     twitter: {\n//         \"&:hover, &.Mui-focusVisible\": hover,\n//         color: \"#33CCFF\"\n//     },\n// }));\n\nconst ContactMe = () => {\n    return (\n        <div className='contactme'>\n            <div className=\"downTriangle\"/>\n            <div className=\"contactTitle\">CONTACT</div>\n            <div className='question'>Have a question or want to work together?</div>\n            <form className='form'>\n                <input className='formInput' placeholder=\"Name\" type=\"text\" name=\"name\" />\n                <input className='formInput' placeholder=\"Enter email\" name=\"email\" />\n                <textarea className='formInput' placeholder=\"Your Message\" name=\"message\" />\n                <div className='submitButton'><input className='contactButton' type=\"submit\" value=\"SUBMIT\"/></div>\n            </form>\n        </div>\n    );\n};\n\nexport default ContactMe;","import React from 'react';\n\nimport './Footer.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons'\nimport { faFacebookF } from '@fortawesome/free-brands-svg-icons'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\n\n\n\nconst Footer = () => {\n    return (\n        <div className='footer'>\n            <footer>\n                <div className=\"icon-wrap flex row\">\n                    <a href=\"https://www.linkedin.com/in/jacobfrericks/\">\n                        <div className=\"flex icon\" id=\"icon-2\">\n                            <FontAwesomeIcon className='socialIcon' icon={faLinkedinIn} />\n                        </div>\n                    </a>\n                    <a href=\"https://www.facebook.com/the.jacob.frericks\">\n                        <div className=\"flex icon\" id=\"icon-3\">\n                            <FontAwesomeIcon className='socialIcon' icon={faFacebookF} />\n                        </div>\n                    </a>\n                    <a href=\"https://github.com/JacobFrericks/\">\n                        <div className=\"flex icon\" id=\"icon-4\">\n                            <FontAwesomeIcon className='socialIcon' icon={faGithub} />\n                        </div>\n                    </a>\n                    <a href=\"https://twitter.com/JacTheDev\">\n                        <div className=\"flex icon\" id=\"icon-5\">\n                            <FontAwesomeIcon className='socialIcon' icon={faTwitter} />\n                        </div>\n                    </a>\n                </div>\n                <div className=\"info-box\">\n                    <div className=\"footnote\">\n                        Jacob Frericks <span className=\"highlight\">&copy;{new Date().getFullYear()}</span>\n                    </div>\n                </div>\n            </footer>\n        </div>\n    );\n};\n\nexport default Footer;","import React from 'react';\nimport './App.scss';\n// import Header from './components/NavbarScroller';\nimport BrandBanner from './components/BrandBanner';\nimport AboutMe from \"./components/AboutMe\";\nimport Portfolio from \"./components/Portfolio\";\nimport Blog from \"./components/Blog\";\n// import WorkExperience from \"./components/WorkExperience\";\nimport ContactMe from \"./components/ContactMe\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n    return (\n    <div className=\"App\">\n      <BrandBanner/>\n      <AboutMe/>\n      <Portfolio/>\n      <Blog/>\n      <ContactMe/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}